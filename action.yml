name: 'InfluxDB Metrics Reporter'
description: 'Send deployment metrics to InfluxDB using Line Protocol for monitoring and analytics'
author: 'Luis GerÃ³nimo'

inputs:
  influx_token:
    description: 'InfluxDB authentication token'
    required: true
  job_status:
    description: 'Job execution status (success, failure, cancelled)'
    required: false
    default: 'unknown'
  measurement:
    description: 'InfluxDB measurement name for metrics organization'
    required: false
    default: 'github_deployments'

runs:
  using: composite
  steps:
    - name: Report Metrics to InfluxDB
      shell: bash
      env:
        # InfluxDB Configuration
        INFLUX_URL: http://10.10.4.81:8087
        INFLUX_ORG: amtelser
        INFLUX_BUCKET: actions
        INFLUX_TOKEN: ${{ inputs.influx_token }}
        MEASUREMENT: ${{ inputs.measurement }}
        
        # GitHub Context Variables
        GH_ACTOR: ${{ github.actor }}
        GH_REPOSITORY: ${{ github.repository }}
        GH_REF_NAME: ${{ github.ref_name }}
        GH_SHA: ${{ github.sha }}
        GH_TIMESTAMP: ${{ github.event.head_commit.timestamp }}
        GH_WORKFLOW: ${{ github.workflow }}
        GH_RUN_NUMBER: ${{ github.run_number }}
        GH_RUN_ID: ${{ github.run_id }}
        STATUS: ${{ inputs.job_status }}
      run: |
        set -euo pipefail
        
        # Validate configuration
        echo "Validating InfluxDB configuration..."
        if [ -z "$INFLUX_URL" ] || [ -z "$INFLUX_TOKEN" ]; then
          echo "Error: InfluxDB configuration is incomplete. Metrics will not be sent."
          exit 0
        fi
        
        # Escape function for Line Protocol format
        escape_lineprotocol() {
          sed -E 's/([ ,=])/\\\1/g'
        }
        
        # Prepare tags with proper escaping
        user=$(printf '%s' "${GH_ACTOR:-unknown}" | escape_lineprotocol)
        repo=$(printf '%s' "${GH_REPOSITORY:-unknown}" | escape_lineprotocol)
        branch=$(printf '%s' "${GH_REF_NAME:-unknown}" | escape_lineprotocol)
        status=$(printf '%s' "${STATUS:-unknown}" | escape_lineprotocol)
        workflow=$(printf '%s' "${GH_WORKFLOW:-unknown}" | escape_lineprotocol)
        sha=$(printf '%s' "${GH_SHA:0:7}" | escape_lineprotocol)
        measurement="${MEASUREMENT:-github_deployments}"
        
        # Calculate timestamp in nanoseconds
        if [ -n "${GH_TIMESTAMP:-}" ]; then
          timestamp=$(date -u -d "$GH_TIMESTAMP" +%s%N 2>/dev/null || date -u +%s%N)
        else
          timestamp=$(date -u +%s%N)
        fi
        
        # Build Line Protocol format
        line_protocol="${measurement},user=${user},repository=${repo},branch=${branch},status=${status},workflow=${workflow},commit=${sha} value=1i,run_number=${GH_RUN_NUMBER}i,run_id=${GH_RUN_ID}i ${timestamp}"
        
        # Send metric to InfluxDB
        if curl -sfS -X POST "${INFLUX_URL}/api/v2/write?org=${INFLUX_ORG}&bucket=${INFLUX_BUCKET}&precision=ns" \
          -H "Authorization: Token ${INFLUX_TOKEN}" \
          -H "Content-Type: text/plain; charset=utf-8" \
          -H "Accept: application/json" \
          --data-binary "$line_protocol" \
          --max-time 10 \
          --retry 2 \
          --retry-delay 1; then
          echo "Successfully sent metrics to InfluxDB"
        else
          error_code=$?
          echo "Warning: Failed to send metrics to InfluxDB (exit code: ${error_code})"
          echo "This error will not fail the workflow execution"
        fi

branding:
  icon: 'activity'
  color: 'blue'
