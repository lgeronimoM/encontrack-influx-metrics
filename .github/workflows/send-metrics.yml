name: Send InfluxDB Metrics

on:
  workflow_call:
    inputs:
      job_status:
        description: 'Estado del job (success, failure, cancelled)'
        required: true
        type: string
      measurement:
        description: 'Nombre de la medici√≥n en InfluxDB'
        required: false
        type: string
        default: 'github_deploys'
    # NO declaramos secrets aqu√≠ - usamos los del repo centralizado

# Permisos m√≠nimos necesarios
permissions:
  contents: read

jobs:
  send-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: üìä Enviar m√©trica a InfluxDB
        shell: bash
        env:
          # Secretos del repositorio encontrack-influx-metrics
          INFLUX_URL: ${{ secrets.INFLUX_URL }}
          INFLUX_ORG: ${{ secrets.INFLUX_ORG }}
          INFLUX_BUCKET: ${{ secrets.INFLUX_BUCKET }}
          INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
          # Datos del repositorio llamador
          MEASUREMENT: ${{ inputs.measurement }}
          GH_ACTOR: ${{ github.actor }}
          GH_REPOSITORY: ${{ github.repository }}
          GH_REF_NAME: ${{ github.ref_name }}
          GH_SHA: ${{ github.sha }}
          GH_TS: ${{ github.event.head_commit.timestamp }}
          GH_WORKFLOW: ${{ github.workflow }}
          GH_RUN_NUMBER: ${{ github.run_number }}
          STATUS: ${{ inputs.job_status }}
        run: |
          set -euo pipefail
          
          echo "üîç Verificando configuraci√≥n..."
          if [ -z "$INFLUX_URL" ] || [ -z "$INFLUX_TOKEN" ]; then
            echo "‚ùå Error: Secretos de InfluxDB no configurados en encontrack-influx-metrics"
            exit 1
          fi
          
          # Validar que solo repos autorizados puedan usar esto
          ALLOWED_REPOS=(
            "lgeronimoM/lgeronimoM-TallerMGF"
            "lgeronimoM/otro-repo"
            # Agrega m√°s repos seg√∫n necesites
          )
          
          AUTHORIZED=false
          for repo in "${ALLOWED_REPOS[@]}"; do
            if [ "$GH_REPOSITORY" = "$repo" ]; then
              AUTHORIZED=true
              break
            fi
          done
          
          if [ "$AUTHORIZED" = false ]; then
            echo "‚ö†Ô∏è Advertencia: Repo $GH_REPOSITORY no est√° en la lista autorizada"
            echo "   Si es leg√≠timo, agr√©galo al workflow"
            # Opcional: exit 1 para bloquear repos no autorizados
          fi
          
          # Funci√≥n de escape para Line Protocol
          esc() { sed -E 's/([ ,=])/\\\1/g'; }
          
          user=$(printf '%s' "${GH_ACTOR:-unknown}" | esc)
          repo=$(printf '%s' "${GH_REPOSITORY:-unknown}" | esc)
          branch=$(printf '%s' "${GH_REF_NAME:-unknown}" | esc)
          status=$(printf '%s' "${STATUS:-unknown}" | esc)
          workflow=$(printf '%s' "${GH_WORKFLOW:-unknown}" | esc)
          sha=$(printf '%s' "${GH_SHA:0:7}" | esc)
          measurement="${MEASUREMENT:-github_deploys}"
          
          # Timestamp en nanosegundos
          if [ -n "${GH_TS:-}" ]; then
            TS=$(date -u -d "$GH_TS" +%s%N 2>/dev/null || date -u +%s%N)
          else
            TS=$(date -u +%s%N)
          fi
          
          # Line Protocol con tags adicionales
          LINE="${measurement},user=${user},repo=${repo},branch=${branch},status=${status},workflow=${workflow},sha=${sha} value=1,run_number=${GH_RUN_NUMBER}i ${TS}"
          
          echo "üì§ Enviando m√©trica..."
          echo "  Repo: ${GH_REPOSITORY}"
          echo "  Branch: ${GH_REF_NAME}"
          echo "  Status: ${STATUS}"
          echo "  SHA: ${GH_SHA:0:7}"
          
          if curl -sfS -X POST "$INFLUX_URL/api/v2/write?org=$INFLUX_ORG&bucket=$INFLUX_BUCKET&precision=ns" \
            -H "Authorization: Token $INFLUX_TOKEN" \
            -H "Content-Type: text/plain; charset=utf-8" \
            --data-binary "$LINE"; then
            echo "‚úÖ M√©trica enviada exitosamente a InfluxDB"
          else
            echo "‚ö†Ô∏è No se pudo enviar la m√©trica (c√≥digo: $?)"
            exit 0  # No fallar el workflow por esto
          fi
